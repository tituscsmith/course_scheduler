{"version":3,"sources":["SearchAndFilter.js","Sidebar.js","Course.js","Time.js","Section.js","Subsection.js","CourseArea.js","RateButton.js","CompletedCourse.js","CompletedCourseArea.js","RecommendedCourse.js","RecommendedCourseArea.js","App.js","serviceWorker.js","index.js"],"names":["SearchAndFilter","courses","search","interestArea","subject","minimumCredits","maximumCredits","favoriteMode","favorites","console","log","filteredCourses","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","course","value","keywords","includes","credits","this","courseMatch","push","err","return","i","length","Sidebar","props","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","searchAndFilter","React","createRef","state","setCourses","current","e","indexOf","key","preventDefault","subjectOptions","subjects","react_default","a","createElement","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","keyword","_this2","setState","_this3","Fragment","Card_default","style","width","position","marginTop","marginLeft","marginRight","backgroundColor","fontFamily","Body","Title","fontSize","Form_default","Group","controlId","onChange","Label","Control","type","placeholder","autoComplete","ref","as","getSubjectOptions","getInterestAreas","display","flexDirection","onKeyDown","handleCreditsKeyDown","min","max","Check","label","toggleFavorite","Component","Course","buttonRef","event","stopPropagation","cartArray","removeArray","cart","data","innerText","_i3","_Object$values3","values","sections","section","_i4","_Object$values4","subsections","subsection","removeFromCart","checkRequisites","alert","_i","_Object$values","_i2","_Object$values2","addToCart","getUnlockIcon","getLockIcon","description","slice","concat","margin","onClick","changeSearchMode","cursor","name","Button_default","float","toggleCart","buttonText","number","Text","descriptionAbbreviation","Time","day","toUpperCase","toLowerCase","hour","Section","days","hours","time","_Object$keys","keys","times","src_Time","parent","instructor","location","getTimes","cardBody","sectionText","Subsection","grandparent","CourseArea","bind","assertThisInitialized","allData","searchMode","courseDisplay","getCourses","cartMode","className","borderWidth","textAlign","getSections","getSubsections","currentSection","src_Subsection","c","currentCourse","_i6","_Object$values6","src_Section","String","cartContains","_i5","_Object$values5","_this4","_i7","_Object$values7","src_Course","_i8","_Object$values8","_i9","_Object$values9","_i10","reqString","reqs","requisites","classList","toString","split","j","booleanOR","completedCourses","keyString","keyList","height","viewBox","fill","xmlns","fillRule","d","_this5","formattedMode","getHeadMessage","backButton","getRequisites","getKeywords","paddingBottom","getHead","displaySearchMode","RateButton","rating","completed","Dropdown_default","onSelect","handleSelect","Toggle","borderColor","variant","id","Menu","Item","eventKey","addRating","getButton","CompletedCourse","src_RateButton","coursenumber","CompletedCourseArea","src_CompletedCourse","RecommendedCourse","innerHTML","addFavorite","removeFavorite","matchingKeyword","RecommendedCourseArea","keywordMatch","src_RecommendedCourse","recommendedKeywords","App","allCourses","recommendedCourses","recommendedRatings","toConsumableArray","splice","mode","b","index","updateRecommendedKeywords","filter","x","getSubjects","setInterestAreas","_React$createElement","rel","href","integrity","crossOrigin","src_Sidebar","font-family","Tabs_default","defaultActiveKey","k","minHeight","zIndex","Tab_default","title","disabled","paddingTop","src_CourseArea","src_CompletedCourseArea","src_RecommendedCourseArea","defineProperty","Footer","justifyContent","Boolean","window","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.5042bc98.chunk.js","sourcesContent":["class SearchAndFilter {\r\n   \r\n    searchAndFilter(courses, search, interestArea, subject, minimumCredits, maximumCredits, favoriteMode, favorites) {\r\n      console.log(\"FavoriteMode: \" + favoriteMode);\r\n      let filteredCourses = [];\r\n        for(const course of courses) {\r\n          //Filter course by credits and subject\r\n          if((interestArea===\"All\" || course.keywords.includes(interestArea)) && (subject===\"All\" || course.subject===subject) && (minimumCredits === \"\" || course.credits >= minimumCredits) && (maximumCredits === \"\" || course.credits <= maximumCredits)){\r\n            //Iterate through courses and check if they contain a specific keyword\r\n            if(this.courseMatch(course, search, interestArea)){\r\n              if(!favoriteMode || (favoriteMode && favorites.includes(course))){\r\n                console.log(\"if\");\r\n                filteredCourses.push(course);\r\n              }\r\n            }\r\n          }\r\n      }\r\n\r\n      \r\n        return filteredCourses;\r\n\r\n    }\r\n\r\n    //Function to check if a chourse contains a specific keyword\r\n    courseMatch(course, search, interestArea){\r\n\r\n      for(var i =0; i<course.keywords.length; i++){\r\n        if(course.keywords[i].includes(search)){\r\n          \r\n          return true;\r\n        }\r\n\r\n      }\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default SearchAndFilter;\r\n","import React from 'react';\r\nimport './App.css';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Form from 'react-bootstrap/Form';\r\nimport SearchAndFilter from './SearchAndFilter';\r\n\r\nclass Sidebar extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.searchAndFilter = new SearchAndFilter();\r\n    this.subject = React.createRef();\r\n    this.minimumCredits = React.createRef();\r\n    this.maximumCredits = React.createRef();\r\n    this.search = React.createRef();\r\n    this.interestArea = React.createRef();\r\n    this.state = {\r\n      favoriteMode: false };\r\n  }\r\n  \r\n\r\n  setCourses() {\r\n    this.props.setCourses(this.searchAndFilter.searchAndFilter(this.props.courses, this.search.current.value, this.interestArea.current.value, this.subject.current.value, this.minimumCredits.current.value, this.maximumCredits.current.value, this.state.favoriteMode, this.props.favorites));\r\n  }\r\n\r\n  handleCreditsKeyDown(e) {\r\n    if(['0','1','2','3','4','5','6','7','8','9','Backspace','ArrowLeft','ArrowRight','ArrowUp','ArrowDown','Tab'].indexOf(e.key) === -1)\r\n      e.preventDefault();\r\n  }\r\n\r\n  getSubjectOptions() {\r\n    let subjectOptions = [];\r\n\r\n    for(const subject of this.props.subjects) {\r\n      subjectOptions.push(<option key={subject}>{subject}</option>);\r\n    }\r\n\r\n    return subjectOptions;\r\n  }\r\n  getInterestAreas() {\r\n    let keywords = [];\r\n    for(const keyword of this.props.keywords) {\r\n      keywords.push(<option key={keyword}>{keyword}</option>);\r\n    }\r\n    return keywords;\r\n  }\r\n  toggleFavorite(){\r\n\r\n    console.log(\"blah\")\r\n    this.setState((state) => ({\r\n      favoriteMode: !this.state.favoriteMode\r\n    }),\r\n    () => {this.setCourses()}\r\n  );\r\n  }\r\n\r\n  render() {\r\n    return (      // {this.getInterests()}\r\n      \r\n      <>\r\n        <Card style={{width: 'calc(20vw - 5px)', position: 'fixed', 'marginTop': '6vh', marginLeft: '2vw',marginRight: '2vw', backgroundColor: \"#f3f9ff\", 'fontFamily': 'Merriweather, sans-serif'}}>\r\n          <Card.Body>\r\n            <Card.Title style = {{'fontSize': '24px'}}>Search and Filter</Card.Title>\r\n            <Form>\r\n              <Form.Group controlId=\"formKeywords\" onChange={() => this.setCourses()} style={{width: '100%'}}>\r\n                <Form.Label>Search</Form.Label>\r\n                <Form.Control type=\"text\" placeholder=\"Search\" autoComplete=\"off\" ref={this.search}/>\r\n              </Form.Group>\r\n\r\n              <Form.Group controlId=\"formSubject\">\r\n                <Form.Label>Subject</Form.Label>\r\n                <Form.Control as=\"select\" ref={this.subject} onChange={() => this.setCourses()}>\r\n                  {this.getSubjectOptions()}\r\n                </Form.Control>\r\n              </Form.Group>\r\n\r\n              <Form.Group controlId=\"formInterests\">\r\n                <Form.Label>Interest Area</Form.Label>\r\n                <Form.Control as=\"select\" ref={this.interestArea} onChange={() => this.setCourses()}>\r\n                  {this.getInterestAreas()}\r\n                </Form.Control>\r\n              </Form.Group>\r\n\r\n              <div style={{display: 'flex', flexDirection: 'row', 'fontFamily': 'Merriweather, sans-serif'}}>\r\n                <Form.Group controlId=\"minimumCredits\" style = {{'width': '3vw'}} onChange={() => this.setCourses()} onKeyDown={(e) => this.handleCreditsKeyDown(e)}>\r\n                  <Form.Label>Credits</Form.Label>\r\n                  <Form.Control type=\"number\"  min = \"1\" max = \"12\" autoComplete=\"off\" ref={this.minimumCredits}/>\r\n                </Form.Group>\r\n                <div style={{marginLeft: '5px', marginRight: '5px', marginTop: '38px', 'fontFamily': 'Merriweather, sans-serif'}}>to</div>\r\n                <Form.Group controlId=\"maximumCredits\" style={{marginTop: '27px', 'width': '3vw'}} onChange={() => this.setCourses()} onKeyDown={(e) => this.handleCreditsKeyDown(e)}>\r\n                  <Form.Control type=\"number\" min=\"1\" max = \"12\" autoComplete=\"off\" ref={this.maximumCredits}/>\r\n                </Form.Group>\r\n                \r\n              </div>\r\n              <Form.Check ref = {this.favoriteMode} label=\"See Favorites\" onChange={() => this.toggleFavorite()}/>\r\n            </Form>\r\n              \r\n          </Card.Body>\r\n        </Card>\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Sidebar;\r\n","import React from 'react';\r\nimport './App.css';\r\n// import Section from './Section';\r\nimport Card from 'react-bootstrap/Card'\r\nimport Button from 'react-bootstrap/Button'\r\n\r\n\r\n\r\nclass Course extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.buttonRef = React.createRef();\r\n  }\r\n\r\n  \r\n\r\n  \t //This function adds or removes classes/sections/subections from the cart,\r\n\t  //by pushing elements into an array and using one of the two callback functions\r\n    //addToCart or removeToCart to adjust the cart\r\n    \r\n  toggleCart(event){\r\n    event.stopPropagation()\r\n    let cartArray = [];//Use array for sake of type match with section and subsections\r\n    let removeArray = [];//Remove array\r\n    if(!this.props.cart.includes(this.props.data)){\r\n\r\n      //Requisite Status Alert\r\n      if(!this.props.checkRequisites(this.props.data)){\r\n        alert(\"!You do not meet the prerequisites for this course!\");\r\n      }\r\n      \r\n\r\n\r\n      //Still add course to cart even if class doesn't meet requirements\r\n      cartArray.push(this.props.data);\r\n      //Add course to cart\r\n      for(const section of Object.values(this.props.data.sections)) {\r\n        if(!this.props.cart.includes(section)){\r\n          // sectionStatus = true;\r\n          cartArray.push(section);\r\n          for(const subsection of Object.values(section.subsections)) {\r\n            cartArray.push(subsection);\r\n\r\n          }\r\n        }\r\n      }\r\n\r\n      this.props.addToCart(cartArray);\r\n    }\r\n    else if(this.buttonRef.current.innerText===\" Remove Class \"){\r\n      removeArray.push(this.props.data);\r\n\r\n      //Remove any section or subsection in cart\r\n      for(const section of Object.values(this.props.data.sections)) {\r\n\t\t\t\tif(this.props.cart.includes(section)){\r\n          removeArray.push(section);\r\n          for(const subsection of Object.values(section.subsections)) {\r\n\r\n            if(this.props.cart.includes(subsection)){\r\n              removeArray.push(subsection);\r\n            }\r\n          }\r\n\t\t\t\t}\r\n      }\r\n      this.props.removeFromCart(removeArray);\r\n\r\n    }\r\n    else{\r\n      console.log(this.buttonRef.current.innerText)\r\n    }\r\n\r\n\r\n  }\r\n  buttonText(){\r\n    if(this.props.getUnlockIcon() === null){\r\n      return;\r\n    }\r\n    if(this.props.cart.includes(this.props.data)){\r\n      return <div>{this.props.getUnlockIcon()} Remove Class {this.props.getUnlockIcon()} </div>;\r\n    }\r\n    else return <div>{this.props.getLockIcon()} Add Class {this.props.getLockIcon()} </div>;\r\n  }\r\n\r\n  //Add an ellipsis if description is too long\r\n  descriptionAbbreviation(){\r\n    if(this.props.data.description.length < 400){\r\n      return this.props.data.description;\r\n    }\r\n    else return this.props.data.description.slice(0,400).concat(\"...\");\r\n  }\r\n\r\n  render() {\r\n    return (//Return Name, Subject, Credits, Course Number, Course Description, Requisites, Keyboard\r\n      //, backgroundColor: \"#f3f9ff\"\r\n          <Card style = {{\"margin\": \"0px 3vw 3vh\", backgroundColor: \"#f3f9ff\"}}>\r\n              <a onClick={() => this.props.changeSearchMode(\"section\", this.props.data, null)} style={{ cursor: \"pointer\"}}>\r\n                  <Card.Body>\r\n                    <h1>{this.props.data.name}<Button ref={this.buttonRef} style = {{\"float\": \"right\", backgroundColor: \"#6fa8dc\", \"fontFamily\": \"sans-serif\"}} onClick = {(event) =>this.toggleCart(event)}>{this.buttonText()}</Button></h1>\r\n                    <h5>{this.props.data.number} | {this.props.data.credits} Credits</h5>\r\n                    <Card.Text>{this.descriptionAbbreviation()}</Card.Text>\r\n                  </Card.Body></a>\r\n          </Card>\r\n    )\r\n    \r\n  }\r\n}\r\n\r\nexport default Course;\r\n","import React from 'react'\nimport './App.css'\n\n\nfunction Time(props) {\n\t\t//Capitalize Day\n\t\tvar day = props.day\n\t\tday = day[0].toUpperCase()+day.slice(1).toLowerCase();\n\n\t\treturn <div>{day} {props.hour}</div>;\n\t\t\n}\n\n\nexport default Time;","import React from 'react'\nimport './App.css'\n// import Subsection from './Subsection.js'\nimport Time from './Time'\nimport Card from 'react-bootstrap/Card'\nimport Button from 'react-bootstrap/Button'\n\nclass Section extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.buttonRef = React.createRef();\n\t  }\n\t\n\tgetTimes() {\n\t\tlet days = [];\n\t\tlet hours = [];\n\n\t\t//Need to figure out a way to parse the time's \"values\"\n\t\tfor(const hour of Object.values(this.props.data.time)) {\n\t\t\thours.push(hour);\n\t\t}\n\t\tfor(const day of Object.keys(this.props.data.time)) {\n\t\t\tdays.push(day)\n\t\t}\n\t\n\t\tlet times = [];\n\t\tvar i ;\n\t\tlet key = 1;\n\t\tfor (i = 0; i < days.length; i++) {\n\t\t\ttimes.push(<Time key = {key} day={days[i]} hour={hours[i]}/>)\n\t\t\tkey++;\n\t\t}\n\t\t\n\t\treturn times;\n\t  }\n\n\n\t  //This function adds or removes classes/sections/subections from the cart,\n\t  //by pushing elements into an array and using one of the two callback functions\n\t  //addToCart or removeToCart to adjust the cart\n\t  toggleCart(){\n\t\t\n\n\t\tlet cartArray = [];\n\t\tlet removeArray = [];\n\n\t\t//Add the section, if not already in cart\n\t\tif(!this.props.cart.includes(this.props.data)){\n\t\t\tcartArray.push(this.props.data);\n\t\t\t\n\t\t\t//Add subsection as well by default\n\t\t\tfor(const subsection of Object.values(this.props.data.subsections)) {\n\t\t\t\tcartArray.push(subsection);\n\t\t\t  }\n\n\t\t  //Make sure we don't readd a class\n\t\t  if(this.props.cart!== undefined && !this.props.cart.includes(this.props.parent)){\n\t\t\tcartArray.push(this.props.parent);\n\t\t\t//Requisite Status Alert\n\t\t\t\tif(!this.props.checkRequisites(this.props.parent)){\n\t\t\t\t\talert(\"!You do not meet the prerequisites for this course!\");\n\t\t\t\t}\n\t\t  }\n\t\t  this.props.addToCart(cartArray);\n\n\t\t}\n\n\t\t//Remove the subsection\n\t\telse if(this.buttonRef.current.innerText===\" Remove Section \"){\n\n\t\t\tremoveArray.push(this.props.data);\n\n\t\t  //Remove the subsection as well from the cart, if one is in\n\t\t  for(const subsection of Object.values(this.props.data.subsections)) {\n\t\t\t\tif(this.props.cart.includes(subsection)){\n\t\t\t\t\tremoveArray.push(subsection);\n\t\t\t\t}\n\t\t  }\t\t  \n\t\t  this.props.removeFromCart(removeArray);\n\n\t\t}\n\n\t  }\n\t  buttonText(){\n    \n\t\tif(this.props.cart.includes(this.props.data)){\n\t\t  return <div>{this.props.getUnlockIcon()} Remove Section {this.props.getUnlockIcon()} </div>;\n\t\t}\n\t\telse return <div>{this.props.getLockIcon()} Add Section {this.props.getLockIcon()} </div>;\n\t  }\n\t  \t//Body of our card\n\t  \tcardBody(){\n\t\t\t  return <Card.Body>\n\t\t\t  <h2>{this.props.data.number} | {this.props.data.instructor}<Button ref={this.buttonRef} style = {{\"float\": \"right\", backgroundColor: \"#6fa8dc\", \"fontFamily\": \"sans-serif\"}} onClick = {(event) =>this.toggleCart(event)}>{this.buttonText()}</Button></h2>\n\t\t\t  <h4>{this.props.data.location}</h4>\n\t\t\t  <h5>{this.getTimes()}</h5>\n\t\t\t  <Card.Text></Card.Text>\n\t\t\t</Card.Body>\n\t\t  }\n\t  \tsectionText(){\n\n\t\t\t  //If there are no sections, don't make the section clickable\n\t\t\t  if(this.props.data.subsections===undefined || this.props.data.subsections.length===0){\n\t\t\t\treturn this.cardBody();\n\t\t\t  }\n\t\t\t  //If there are sections, do make the sections clickable\n\t\t\t  else{\n\t\t\t\treturn <a onClick={() => this.props.changeSearchMode(\"subsection\", this.props.parent, this.props.data)} \n\t\t\t\tstyle={{ cursor: \"pointer\"}}>{this.cardBody()}</a>\n\t\t\t  }\n\t\t  }\n\t  \n\trender() {\n\t\t//Return Section Number, Location, Instructor and Meeting Times\n\t\treturn (\n\t\t\t<Card style = {{\"margin\": \"0px 100px 25px\", backgroundColor: \"#f3f9ff\"}}>\n\t\t\t{this.sectionText()}\n\t\t</Card>\n\t\t)\n\t}\n}\n\nexport default Section;","import React from 'react'\nimport './App.css'\nimport Time from './Time.js'\nimport Card from 'react-bootstrap/Card'\nimport Button from 'react-bootstrap/Button'\n\n\nclass Subsection extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.buttonRef = React.createRef();\n\t  }\n\n\tgetTimes() {\n\t\tlet days = [];\n\t\tlet hours = [];\n\n\t\t//Iterate through and parse days and hours from the time data\n\t\tfor(const hour of Object.values(this.props.data.time)) {\n\t\t\thours.push(hour);\n\t\t}\n\t\tfor(const day of Object.keys(this.props.data.time)) {\n\t\t\tdays.push(day)\n\t\t}\n\t\n\t\tlet times = [];\n\t\tlet key = 1;//unique keys for each time component\n\n\t\t//Combine the hour and time data to get time components\n\t\tfor (var i = 0; i < days.length; i++) {\n\t\t\ttimes.push(<Time key = {key} day={days[i]} hour={hours[i]}/>)\n\t\t\tkey++;\n\t\t}\n\t\t\n\t\treturn times;\n\t  }\n\n\t  //This function adds or removes classes/sections/subections from the cart,\n\t  //by pushing elements into an array and using one of the two callback functions\n\t  //addToCart or removeToCart to adjust the cart\n\t  toggleCart(){\n\t\tlet cartArray = [];\n\t\tlet removeArray = [];\n\t\n\t\t\n\n\t\t//Case for subsection not in the cart: need to add\n\t\tif(!this.props.cart.includes(this.props.data)){\n\t\t  //Requisite Status Alert\n\t\t\n\t\t\tcartArray.push(this.props.data);\n\n\t\t  //Make sure we don't readd a section\n\t\t  if(this.props.cart!== undefined && !this.props.cart.includes(this.props.parent)){\n\t\t\tcartArray.push(this.props.parent);\n\n\t\t\t  //Make sure we don't readd a class\n\t\t\t  if(!this.props.cart.includes(this.props.grandparent)){\n\t\t\t\tif(!this.props.checkRequisites(this.props.grandparent)){\n\t\t\t\t\talert(\"!You do not meet the prerequisites for this course!\");\n\t\t\t\t\t}\n\t\t\t\tcartArray.push(this.props.grandparent);\n\t\t\t  }\n\t\t  }\n\n\t\t  //Add all added elements to cart\n\t\t  this.props.addToCart(cartArray);\n\t\t}\n\n\t\t//Case for subsection in the cart: need to remove\n\t\telse if(this.buttonRef.current.innerText===\" Remove Subsection \"){\n\t\t  removeArray.push(this.props.data);\n\t\t  this.props.removeFromCart(removeArray);\n\n\t\t}\n\n\t  }\n\n\t  buttonText(){\n    \n\t\tif(this.props.cart.includes(this.props.data)){\n\t\t  return <div>{this.props.getUnlockIcon()} Remove Subsection {this.props.getUnlockIcon()} </div>;\n\t\t}\n\t\telse return <div>{this.props.getLockIcon()} Add Subsection {this.props.getLockIcon()} </div>;\n\t  }\n\trender() {\n\t\t//Subsections shouldn't be clickable, other than adding them\n\t\treturn (\n\t\t\t<Card style = {{\"margin\": \"0px 100px 25px\", backgroundColor: \"#f3f9ff\"}}>\n\t\t\t\t<Card.Body>\n\t\t\t\t  <h1>{this.props.data.number} | {this.props.data.location}<Button ref={this.buttonRef} style = {{\"float\": \"right\", backgroundColor: \"#6fa8dc\", \"fontFamily\": \"sans-serif\"}} onClick = {(event) =>this.toggleCart(event)}>{this.buttonText()}</Button></h1>\n\t\t\t\t  <h4>{this.getTimes()}</h4>\n\t\t\t\t  <Card.Text></Card.Text>\n\t\t\t\t</Card.Body>\n\t\t</Card>\n\t\t)\n\t}\n}\n\nexport default Subsection;","import React from 'react';\r\nimport './App.css';\r\nimport Course from './Course';\r\nimport Section from './Section';\r\nimport Subsection from './Subsection';\r\nimport Button from 'react-bootstrap/Button'\r\nimport Card from 'react-bootstrap/Card'\r\nimport Time from './Time.js'\r\n\r\n\r\nclass CourseArea extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.checkRequisites = this.checkRequisites.bind(this);\r\n\r\n  }\r\n\r\n    displaySearchMode(){\r\n\r\n      //Don't print anything if data hasn't loaded yet\r\n      if(!Object.keys(this.props.allData).length){\r\n        return;\r\n      }\r\n\r\n      if(this.props.searchMode === 'course'){\r\n        var courseDisplay = this.getCourses();\r\n\r\n        if(courseDisplay.length  === 0 && this.props.cartMode === false){\r\n          return <Card className = \"border-danger\" style = {{\"margin\": \"0px 3vw 2vh\", backgroundColor: \"#fcc2c2\", borderWidth: '7px'}}>\r\n              <Card.Body>\r\n              <h1 style = {{\"textAlign\": \"center\"}}>No Courses with Matching Criteria!</h1>\r\n                <h3 style = {{\"textAlign\": \"center\"}}><em>Please try again with other search criteria!</em></h3>\r\n              </Card.Body>\r\n          </Card>\r\n        }\r\n        else return courseDisplay\r\n      }\r\n      else if(this.props.searchMode === 'section'){\r\n        return this.getSections();\r\n      }\r\n      else if(this.props.searchMode === 'subsection'){\r\n        return this.getSubsections();\r\n      }\r\n    }\r\n  \r\n    getSubsections() {\r\n      console.log(\"getSubsections called\");\r\n      let subsections = [];\r\n      let subsectionStatus = false;\r\n  \r\n       let sectionStatus = this.props.cart.includes(this.props.currentSection);\r\n       //Case for section/parent isn't in cart; display all subsections\r\n       if(!sectionStatus){\r\n        for(const subsection of Object.values(this.props.currentSection.subsections)) {\r\n      \r\n          subsections.push (\r\n          <Subsection key={subsection.number}  checkRequisites = {(c) => this.checkRequisites(c)} getUnlockIcon = {() => this.getUnlockIcon()} getLockIcon = {() => this.getLockIcon()} parent = {this.props.currentSection} grandparent = {this.props.currentCourse} cart = {this.props.cart} data={subsection} removeFromCart={(course) => this.props.removeFromCart(course)} addToCart={(course) => this.props.addToCart(course)}/>\r\n          )\r\n        }\r\n        }\r\n  \r\n        //Case for section/parent is in cart\r\n        else{\r\n  \r\n        for(const subsection of Object.values(this.props.currentSection.subsections)) {\r\n          if(this.props.cart!==undefined && this.props.cart.includes(subsection)){\r\n          subsectionStatus = true;   \r\n          }\r\n        }\r\n        //For alternate implementation \r\n        // //Either a section is in cart\r\n        // if(subsectionStatus){\r\n        // \tfor(const subsection of Object.values(this.props.data.subsections)) {\r\n        // \t\tif(this.props.cart.includes(subsection)){\r\n        // \t\t\t\tsubsections.push (\r\n        // \t\t\t\t<Subsection key={subsection.number} getUnlockIcon = {() => this.getUnlockIcon()}  getLockIcon = {() => this.getLockIcon()} parent = {this.props.currentSection} cart = {this.props.cart} grandparent = {this.props.currentCourse} data={subsection} removeFromCart={(e) => this.props.removeFromCart(e)} addToCart={(e) => this.props.addToCart(e)}/>\r\n        // \t\t\t  )\r\n        // \t\t\t}\r\n        // \t  }\r\n        // }\r\n  \r\n        // //Or all subsections aren't in cart\r\n        // else{\r\n        // \tfor(const subsection of Object.values(this.props.data.subsections)) {\r\n        // \t\tsubsections.push (\r\n        // \t\t\t<Subsection key={subsection.number}  getUnlockIcon = {() => this.getUnlockIcon()} getLockIcon = {() => this.getLockIcon()} parent = {this.props.currentSection} grandparent = {this.props.currentCourse} cart = {this.props.cart} data={subsection} removeFromCart={(e) => this.props.removeFromCart(e)} addToCart={(e) => this.props.addToCart(e)}/>\r\n        // \t\t\t)\r\n        // \t  }\r\n        // }\r\n\r\n        \r\n        //Update case: be able to add all subsections\r\n        for(const subsection of Object.values(this.props.currentSection.subsections)) {\r\n          subsections.push (\r\n            <Subsection key={subsection.number}  checkRequisites = {(c) => this.checkRequisites(c)}  getUnlockIcon = {() => this.getUnlockIcon()} getLockIcon = {() => this.getLockIcon()} parent = {this.props.currentSection} grandparent = {this.props.currentCourse} cart = {this.props.cart} data={subsection} removeFromCart={(e) => this.props.removeFromCart(e)} addToCart={(e) => this.props.addToCart(e)}/>\r\n            )\r\n          }\r\n        }\r\n  \r\n       return subsections\r\n      }\r\n    getSections() {\r\n      let sections = [];\r\n  \r\n      // let courseStatus = this.props.cart.includes(this.props.data);\r\n      let sectionStatus = false;\r\n      console.log(this.props.currentCourse);\r\n      for(const section of Object.values(this.props.currentCourse.sections)) {\r\n        if(this.props.cart!==undefined && this.props.cart.includes(section)){\r\n          sectionStatus = true;\r\n        }\r\n      }\r\n      let courseStatus = this.props.cart.includes(this.props.currentCourse)\r\n  \r\n      //Case: Search Mode -- see al sections\r\n      if(!courseStatus){\r\n        for(const section of Object.values(this.props.currentCourse.sections)) {\r\n  \r\n          sections.push (\r\n            <Section key={section.number} checkRequisites = {(c) => this.checkRequisites(c)} parent = {this.props.currentCourse} getUnlockIcon = {() => this.getUnlockIcon()} getLockIcon = {() => this.getLockIcon()} searchMode = {this.props.searchMode} changeSearchMode = {(String, Course, Subsection) => this.props.changeSearchMode(String, Course, Subsection)} cartContains = {this.props.cartContains} cart = {this.props.cart} data={section} removeFromCart={(e) => this.props.removeFromCart(e)} addToCart={(e) => this.props.addToCart(e)}/>\r\n          )\r\n        }\r\n      }\r\n      //Case: Cart Mode -- two subcases\r\n      else{\r\n      //Alternate Implementation\r\n        //Subcase 1: See only the section that is in the cart\r\n        // if(sectionStatus){\r\n        //   for(const section of Object.values(this.props.data.sections)) {\r\n        //     if(this.props.cart.includes(section)){\r\n        //      // console.log(\"includes section\")\r\n        //         sections.push (\r\n        //         <Section key={section.number} parent = {this.props.currentCourse} getUnlockIcon = {() => this.getUnlockIcon()} getLockIcon = {() => this.getLockIcon()} cartContains = {this.props.cartContains} cart = {this.props.cart} data={section} removeFromCart={(e) => this.props.removeFromCart(e)} addToCart={(e) => this.props.addToCart(e)}/>\r\n        //       )\r\n        //     }\r\n        //   }\r\n        // }\r\n        // //Subcase 2: See all sections\r\n        // else{\r\n        //   for(const section of Object.values(this.props.data.sections)) {\r\n        //         sections.push (\r\n        //         <Section key={section.number} parent = {this.props.currentCourse} getUnlockIcon = {() => this.getUnlockIcon()} getLockIcon = {() => this.getLockIcon()} cartContains = {this.props.cartContains} cart = {this.props.cart} data={section} removeFromCart={(e) => this.props.removeFromCart(e)} addToCart={(e) => this.props.addToCart(e)}/>\r\n        //       )\r\n        //   }\r\n        // }\r\n        //Update Case: Be able to add multiple sections\r\n        for(const section of Object.values(this.props.currentCourse.sections)) {\r\n          sections.push (\r\n          <Section key={section.number} checkRequisites = {(c) => this.checkRequisites(c)} parent = {this.props.currentCourse} getUnlockIcon = {() => this.getUnlockIcon()} getLockIcon = {() => this.getLockIcon()} searchMode = {this.props.searchMode} changeSearchMode = {(String, Course, Subsection) => this.props.changeSearchMode(String, Course, Subsection)} cartContains = {this.props.cartContains} cart = {this.props.cart} data={section} removeFromCart={(e) => this.props.removeFromCart(e)} addToCart={(e) => this.props.addToCart(e)}/>\r\n        )\r\n    }\r\n  \r\n      }\r\n  \r\n      //Case for out of cart\r\n  \r\n      return sections;\r\n    }\r\n    getCourses() {\r\n      // console.log(\"getCourses called\");\r\n      var courses = [];\r\n\r\n      if(this.props.cartMode===false){\r\n       \r\n        for(const course of Object.values(this.props.data)) {\r\n          //Don't display courses in the cart\r\n          // if(this.props.cart.includes(course)){\r\n          //   continue;\r\n          // }\r\n          courses.push (\r\n            <Course key={course.name} data={course} checkRequisites = {(c) => this.checkRequisites(c)} getUnlockIcon = {() => this.getUnlockIcon()} getLockIcon = {() => this.getLockIcon()} searchMode = {this.props.searchMode} changeSearchMode = {(String, Course, Subsection) => this.props.changeSearchMode(String, Course, Subsection)} cart ={this.props.cart} removeFromCart={(Course) => this.props.removeFromCart(Course)} addToCart={(course) => this.props.addToCart(course)}/>\r\n          )\r\n        }\r\n      }\r\n      else{\r\n\r\n        for(const course of Object.values(this.props.data)) {\r\n\r\n          //If the cart includes the course, render it to the cart\r\n          if(this.props.cart.includes(course)){\r\n         \r\n            courses.push (\r\n              <Course key={course.name} data={course} checkRequisites = {(c) => this.checkRequisites(c)} getUnlockIcon = {() => this.getUnlockIcon()} getLockIcon = {() => this.getLockIcon()} searchMode = {this.props.searchMode} changeSearchMode = {(String, Course, Subsection) => this.props.changeSearchMode(String, Course, Subsection)} cart ={this.props.cart} removeFromCart={(Course) => this.props.removeFromCart(Course)} addToCart={(Course) => this.props.addToCart(Course)}/>\r\n            )\r\n\r\n          }\r\n        }\r\n      }\r\n      return courses;\r\n    }\r\n  // }\r\n  getTimes() {\r\n    let days = [];\r\n    let hours = [];\r\n\r\n    //Iterate through and parse days and hours from the time data\r\n    for(const hour of Object.values(this.props.currentSection.time)) {\r\n      hours.push(hour);\r\n    }\r\n    for(const day of Object.keys(this.props.currentSection.time)) {\r\n      days.push(day)\r\n    }\r\n  \r\n    let times = [];\r\n    let key = 1;//unique keys for each time component\r\n\r\n    //Combine the hour and time data to get time components\r\n    for (var i = 0; i < days.length; i++) {\r\n      times.push(<Time key = {key} day={days[i]} hour={hours[i]}/>)\r\n      key++;\r\n    }\r\n    \r\n    return times;\r\n    }\r\n    \r\n  getRequisites(){\r\n    let reqString = '';\r\n    var reqs = this.props.currentCourse.requisites;\r\n\r\n    for(var i = 0; i<reqs.length; i++){\r\n      //combo = 1D\r\n      let combo = reqs[i];\r\n\r\n      //Use OR to separate an array by commas\r\n      let classList = combo.toString().split(/[,]+/);\r\n      for(var j = 0; j<classList.length; j++){\r\n        reqString = reqString.concat(classList[j]);\r\n        if(j!==classList.length-1){\r\n          reqString = reqString.concat(\" OR \");\r\n        }\r\n      }\r\n      //End of a 1D array, AND with the next one\r\n      if(i!==reqs.length-1 && reqs.length!==1){\r\n        reqString = reqString.concat(\" AND \");\r\n      }\r\n\r\n    }\r\n\r\n    //Case for no prerequisites\r\n    if (reqString.length===0){\r\n      reqString = \"None\";\r\n    }\r\n  \r\n    // console.log(reqString);\r\n    return reqString;\r\n  }\r\n\r\n  //Function to check if a course is able to be taken, by checking prereqs\r\n  checkRequisites(course){\r\n    // console.log(this.props.completedCourses.data);\r\n    var reqs = course.requisites;\r\n    // console.log(reqs)\r\n    //Won't iterate at all if no prereqs\r\n    for(var i = 0; i<reqs.length; i++){\r\n      var booleanOR = false;\r\n      //combo = 1D\r\n      let combo = reqs[i];\r\n\r\n      //Use OR to separate an array by commas\r\n      let classList = combo.toString().split(/[,]+/);\r\n      for(var j = 0; j<classList.length; j++){\r\n        if(this.props.completedCourses.data.includes(classList[j])){\r\n          booleanOR = true;\r\n          continue;\r\n        }\r\n        //At end, if all individual OR clauses are false, then the whole thing is false\r\n        if(!booleanOR && j == classList.length-1){\r\n          // console.log(\"returning false\");\r\n          return false;\r\n        }\r\n      }\r\n    }\r\n    return true;\r\n  }\r\n  getKeywords(){\r\n    let keyString = '';\r\n    var keywords = this.props.currentCourse.keywords;\r\n    var keyList = keywords.toString().split(/[,]+/);\r\n    for(var i = 0; i<keyList.length; i++){\r\n      if(i===keyList.length-1){\r\n        keyString = keyString.concat(keyList[i]);\r\n\r\n      }\r\n      else{\r\n        keyString = keyString.concat(keyList[i] + \", \");\r\n\r\n      }\r\n    }\r\n    return keyString;\r\n  }\r\n  getLockIcon(){\r\n    return <svg width=\"1em\" height=\"16px\" viewBox=\"0 0 16 16\" className=\"bi bi-lock\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\r\n  <path fillRule=\"evenodd\" d=\"M11.5 8h-7a1 1 0 0 0-1 1v5a1 1 0 0 0 1 1h7a1 1 0 0 0 1-1V9a1 1 0 0 0-1-1zm-7-1a2 2 0 0 0-2 2v5a2 2 0 0 0 2 2h7a2 2 0 0 0 2-2V9a2 2 0 0 0-2-2h-7zm0-3a3.5 3.5 0 1 1 7 0v3h-1V4a2.5 2.5 0 0 0-5 0v3h-1V4z\"/>\r\n</svg>\r\n  }\r\n  getUnlockIcon(){\r\n    return <svg width=\"1em\" height=\"16px\" viewBox=\"0 0 16 16\" className=\"bi bi-unlock\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\r\n  <path fillRule=\"evenodd\" d=\"M9.655 8H2.333c-.264 0-.398.068-.471.121a.73.73 0 0 0-.224.296 1.626 1.626 0 0 0-.138.59V14c0 .342.076.531.14.635.064.106.151.18.256.237a1.122 1.122 0 0 0 .436.127l.013.001h7.322c.264 0 .398-.068.471-.121a.73.73 0 0 0 .224-.296 1.627 1.627 0 0 0 .138-.59V9c0-.342-.076-.531-.14-.635a.658.658 0 0 0-.255-.237A1.122 1.122 0 0 0 9.655 8zm.012-1H2.333C.5 7 .5 9 .5 9v5c0 2 1.833 2 1.833 2h7.334c1.833 0 1.833-2 1.833-2V9c0-2-1.833-2-1.833-2zM8.5 4a3.5 3.5 0 1 1 7 0v3h-1V4a2.5 2.5 0 0 0-5 0v3h-1V4z\"/>\r\n</svg>\r\n  }\r\n  backButton(){\r\n        //Button to go back to Class Mode\r\n        if(this.props.searchMode===\"section\")\r\n            return <Button style = {{\"float\": \"center\", backgroundColor: \"#6fa8dc\", \"textAlign\": \"center\", fontSize: \"16px\", \"fontFamily\": \"sans-serif\"}} \r\n            onClick={() => this.props.changeSearchMode(\"course\", null, null)}>Go Back</Button>;\r\n\r\n        //Button to go back to Section Mode\r\n        else if(this.props.searchMode===\"subsection\"){\r\n            return <Button style = {{\"float\": \"center\", backgroundColor: \"#6fa8dc\", \"textAlign\": \"center\", fontSize: \"16px\", \"fontFamily\": \"sans-serif\"}} \r\n            onClick={() => this.props.changeSearchMode(\"section\", this.props.currentCourse, null)}>Go Back</Button>;\r\n        }\r\n\r\n        //No Button\r\n        else{\r\n          return;\r\n        }\r\n    }\r\n\r\n    //Get Head Message\r\n  getHead(){\r\n\r\n    var formattedMode = this.props.searchMode[0].toUpperCase()+this.props.searchMode.slice(1).toLowerCase();\r\n\r\n    //Message for Empty Cart\r\n    if(this.props.cart.length ===0  && this.props.cartMode){\r\n      return <Card style = {{\"margin\": \"0px 3vw 2vh\", backgroundColor: \"#f3f9ff\"}}>\r\n              <Card.Body>\r\n              <h1 style = {{\"textAlign\": \"center\"}}><em>Empty Cart. <br></br>Search for classes to add to cart. </em></h1>\r\n                \r\n              </Card.Body>\r\n          </Card>\r\n    }\r\n    else{return <Card style = {{\"margin\": \"1vh 3vw 2vh\", backgroundColor: \"#f3f9ff\"}}>\r\n                      <Card.Body>\r\n                        {this.getHeadMessage()}\r\n                      <h1 style = {{\"textAlign\": \"center\"}}><strong>{formattedMode} View {this.backButton()}</strong></h1>\r\n                        \r\n                      </Card.Body>\r\n                </Card>}\r\n\r\n    }\r\n    \r\n    getHeadMessage(){\r\n \r\n            if(this.props.searchMode===\"section\"){ \r\n              return <div><h1>{this.props.currentCourse.number} | {this.props.currentCourse.name} | {this.props.currentCourse.credits} Credits</h1>\r\n                          <h5><strong>Full Description: </strong>{this.props.currentCourse.description}</h5>\r\n                          <h5><strong>Requisites: </strong>{this.getRequisites()}</h5>\r\n                          <h5><em>Keywords: </em>{this.getKeywords()}</h5></div>\r\n\r\n\r\n            }\r\n            else if(this.props.searchMode===\"subsection\"){\r\n              return <div><h1>{this.props.currentCourse.number} | {this.props.currentCourse.name} | {this.props.currentCourse.credits} Credits</h1>\r\n                          <h5><strong>Full Description: </strong>{this.props.currentCourse.description}</h5>\r\n                          <h5><strong>Requisites: </strong>{this.getRequisites()}</h5>\r\n                          <h5><em>Keywords: </em>{this.getKeywords()}</h5>\r\n\r\n                          <h2>{this.props.currentSection.number} | {this.props.currentSection.instructor}</h2>\r\n                          <p>{this.props.currentSection.location}</p>\r\n                          <h5>{this.getTimes()}</h5>\r\n                      </div>\r\n            }\r\n            else if(!this.props.cartMode) return <h1 style = {{\"textAlign\": \"center\"}}><em>Find all the classes you need up here in the clouds.</em><br></br></h1>;\r\n    }\r\n  render() {\r\n    return (\r\n      <div style = {{paddingBottom: '2vh'}}>\r\n      {this.getHead()}    \r\n        {this.displaySearchMode()}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default CourseArea;\r\n","import React from 'react'\nimport './App.css'\nimport Dropdown from 'react-bootstrap/Dropdown';\n\nclass RateButton extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\trating: \"Rate Course!\",\n\t\t  };\n\t  }\n\t  \n\n\t  getButton(){\n\t  if(this.props.completed){\n\t\t\t\treturn (\n\t\t\t\t\t<Dropdown style = {{display: \"inline\", float: \"right\"}} onSelect={(e) => this.handleSelect(e)}>\n\t\t\t\t\t\t\t<Dropdown.Toggle style = {{backgroundColor: \"#6fa8dc\", borderColor: \"#6fa8dc\", fontSize: '20px'}} variant=\"success\" id=\"dropdown-basic\">\n\t\t\t\t\t\t\t\t{this.state.rating}\n\n\t\t\t\t\t\t\t</Dropdown.Toggle>\n\t\t\t\t\t\t\t<Dropdown.Menu >\n\t\t\t\t\t\t\t\t<Dropdown.Item eventKey = \"Rate Course\">No Rating</Dropdown.Item>\n\t\t\t\t\t\t\t\t<Dropdown.Item eventKey = \"1\">1</Dropdown.Item>\n\t\t\t\t\t\t\t\t<Dropdown.Item eventKey = \"2\">2</Dropdown.Item>\n\t\t\t\t\t\t\t\t<Dropdown.Item eventKey = \"3\">3</Dropdown.Item>\n\t\t\t\t\t\t\t\t<Dropdown.Item eventKey = \"4\">4</Dropdown.Item>\n\t\t\t\t\t\t\t\t<Dropdown.Item eventKey = \"5\">5</Dropdown.Item>\n\t\t\t\t\t\t\t</Dropdown.Menu>\n\t\t\t\t\t</Dropdown>\n\t\t\t\t)\n\t\t\t}\n\t}\n\thandleSelect(e){\n\t\tthis.setState({rating: e});\n\t\tthis.props.addRating(this.props.course, e);\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<React.Fragment>{this.getButton()}</React.Fragment>\n\t\t)\n\t}\n}\n\nexport default RateButton;","import React from 'react';\r\nimport './App.css';\r\nimport Card from 'react-bootstrap/Card'\r\nimport RateButton from './RateButton';\r\n\r\n\r\n\r\n\r\nclass CompletedCourse extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.buttonRef = React.createRef();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n          <Card style = {{\"margin\": \"0px 7vw 3vh\", backgroundColor: \"#f3f9ff\"}}>\r\n                  <Card.Body>\r\n                    <h1>{this.props.data.name} <RateButton style = {{\"float\": \"right\"}} addRating = {(coursenumber, rating) => this.props.addRating(coursenumber, rating)}  completed = {this.props.completed} course = {this.props.data}></RateButton></h1>\r\n                    <h5>{this.props.data.number} | {this.props.data.credits} Credits</h5>\r\n                  </Card.Body>\r\n          </Card>\r\n    )\r\n    \r\n  }\r\n}\r\n\r\nexport default CompletedCourse;\r\n","import React from 'react';\r\nimport './App.css';\r\nimport CompletedCourse from './CompletedCourse';\r\nimport Card from 'react-bootstrap/Card'\r\n\r\n\r\nclass CompletedCourseArea extends React.Component {\r\n\r\n    getCourses() {\r\n\r\n      \r\n      //Error prevention for if tab isn't activated\r\n      if(this.props.completedCourses.length === 0){\r\n        return;\r\n      }\r\n      var courses = [];\r\n      // console.log(this.props.data)\r\n      for(const course of Object.values(this.props.data)){\r\n        // console.log(\"looping\")\r\n          //Only print through courses if contained in completedCourses array\r\n          if(this.props.completedCourses.data.includes(course.number)){\r\n          courses.push (\r\n                    <CompletedCourse key={course.name} addRating = {(coursenumber, rating) => this.props.addRating(coursenumber, rating)}  data={course} completed = {true} cart ={this.props.cart}/>\r\n               )\r\n          }\r\n      }\r\n\r\n      //Error message for users to edit filter\r\n      if(courses.length===0){\r\n        return <Card className = \"border-danger\" style = {{\"margin\": \"0px 7vw 3vh\", backgroundColor: \"#fcc2c2\", borderWidth: '7px'}}>\r\n              <Card.Body>\r\n              <h1 style = {{\"textAlign\": \"center\"}}>No Completed Courses with Matching Criteria!</h1>\r\n                <h3 style = {{\"textAlign\": \"center\"}}><em>Please try again with other search criteria!</em></h3>\r\n              </Card.Body>\r\n          </Card>\r\n      }\r\n\r\n      else return courses;\r\n    }\r\n  \r\n  render() {\r\n    return (\r\n      <div style={{margin: '5px'}}>\r\n        {this.getCourses()}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default CompletedCourseArea;\r\n","import React from 'react';\r\nimport './App.css';\r\nimport Card from 'react-bootstrap/Card'\r\nimport Button from 'react-bootstrap/Button'\r\n\r\n\r\n\r\n\r\nclass RecommendedCourse extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.buttonRef = React.createRef();\r\n  }\r\n\r\n\r\n  //Add an ellipsis if description is too long\r\n  descriptionAbbreviation(){\r\n    if(this.props.data.description.length < 400){\r\n      return this.props.data.description;\r\n    }\r\n    else return this.props.data.description.slice(0,400).concat(\"...\");\r\n  }\r\n\r\n  toggleFavorite(){\r\n    console.log(this.buttonRef.current.innerHTML)\r\n    if(this.buttonRef.current.innerHTML===\"Add to Favorites\"){\r\n      this.buttonRef.current.innerHTML=\"Remove from Favorites\"\r\n      return this.props.addFavorite(this.props.data);\r\n\r\n    }\r\n    else{\r\n      this.buttonRef.current.innerHTML=\"Add to Favorites\"\r\n      return  this.props.removeFavorite(this.props.data);\r\n\r\n    }\r\n\r\n  }\r\n//onClick={() => this.props.changeSearchMode(\"course\", this.props.data, null)}\r\n//onClick={console.log(this.props.data)\r\n  render() {\r\n    return (\r\n          <Card style = {{\"margin\": \"0px 3vw 3vh\", backgroundColor: \"#f3f9ff\"}}>\r\n                  <Card.Body>\r\n                    <h1>{this.props.data.name}<Button ref={this.buttonRef} style = {{\"float\": \"right\", backgroundColor: \"#6fa8dc\", \"fontFamily\": \"sans-serif\"}} onClick={() => this.toggleFavorite()}>Add to Favorites</Button></h1>\r\n                    <h5>{this.props.data.number} | {this.props.data.credits} Credits</h5>\r\n                    <h5>Matching keyword: {this.props.matchingKeyword}</h5>\r\n                    <Card.Text>{this.descriptionAbbreviation()}</Card.Text>\r\n                  </Card.Body>\r\n          </Card>\r\n    )\r\n    \r\n  }\r\n}\r\n\r\nexport default RecommendedCourse;\r\n","import React from 'react';\r\nimport './App.css';\r\nimport RecommendedCourse from './RecommendedCourse';\r\nimport Card from 'react-bootstrap/Card'\r\n\r\nclass RecommendedCourseArea extends React.Component {\r\n\r\n    getCourses() {\r\n      //Error prevention for if tab isn't activated\r\n      if(this.props.completedCourses.length === 0){\r\n        return;\r\n      }\r\n      var courses = [];\r\n\r\n      for(const course of Object.values(this.props.data)){\r\n          //Only print course if course shares a keyword with the \r\n          //highly rated completed courses, aka call hasKeyword\r\n          var matchingKeyword = this.keywordMatch(course);\r\n          if(!this.props.completedCourses.data.includes(course.number) && matchingKeyword!==null){\r\n          courses.push (\r\n                    <RecommendedCourse addFavorite={(e) => this.props.addFavorite(e)} removeFavorite={(e) => this.props.removeFavorite(e)} matchingKeyword = {matchingKeyword} key={course.name} data={course} completed = {true} cart ={this.props.cart}/>\r\n               )\r\n          }\r\n      }\r\n\r\n\r\n      //Message for users to rate a course\r\n      if(this.props.recommendedKeywords.length===0){\r\n        return <Card style = {{\"margin\": \"0px 3vw 2vh\", backgroundColor: \"#f3f9ff\"}}>\r\n              <Card.Body>\r\n              <h1 style = {{\"textAlign\": \"center\"}}>No Highly Rated Courses to Recommend From!</h1>\r\n                <h3 style = {{\"textAlign\": \"center\"}}><em>Rate completed courses to see courses recommended for you!</em></h3>\r\n              </Card.Body>\r\n          </Card>\r\n      }\r\n      //Error message for filter mistakes\r\n      else if (courses.length===0){\r\n        return <Card className = \"border-danger\" style = {{\"margin\": \"0px 7vw 3vh\", backgroundColor: \"#fcc2c2\", borderWidth: '7px'}}>\r\n              <Card.Body>\r\n              <h1 style = {{\"textAlign\": \"center\"}}>No Recommended Courses with Matching Criteria!</h1>\r\n                <h3 style = {{\"textAlign\": \"center\"}}><em>Please try again with other search criteria!</em></h3>\r\n              </Card.Body>\r\n          </Card>\r\n      }\r\n      else return courses;\r\n    }\r\n    \r\n    //Function to check if a course has a recommended keyword\r\n    //Returns null if not, matcshing keyword if so\r\n    keywordMatch(course){\r\n          for(const keyword of Object.values(course.keywords)){\r\n            if(this.props.recommendedKeywords.includes(keyword)){\r\n              return keyword;\r\n            }\r\n      }\r\n      return null;\r\n    }\r\n\r\n  render() {\r\n    return (\r\n      <div style={{margin: '5px'}}>\r\n        {this.getCourses()}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default RecommendedCourseArea;\r\n","//Author: Titus Smith\n//Modified Skeleton Code from CS639, UW-Madison Fall 2020\nimport './App.css';\nimport React from 'react';\nimport Tabs from 'react-bootstrap/Tabs'\nimport Tab from 'react-bootstrap/Tab'\nimport Sidebar from './Sidebar';\nimport CourseArea from './CourseArea';\nimport CompletedCourseArea from './CompletedCourseArea';\nimport RecommendedCourseArea from './RecommendedCourseArea';\nimport data from './course_data.json'\nimport completed from './completed.json'\nimport Card from 'react-bootstrap/Card'\n\n\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.addToCart = this.addToCart.bind(this);\n    this.removeFromCart = this.removeFromCart.bind(this);\n    this.changeSearchMode = this.changeSearchMode.bind(this);\n    this.addRating = this.addRating.bind(this);\n\n    this.state = {\n      allCourses: {},\n      filteredCourses: {},\n      subjects: [],\n      keywords: [],\n      cartMode: false,\n      cart: [],\n      searchMode: 'course',\n      currentCourse: null,\n      currentSection: null,\n      completedCourses: [],\n      favorites: [],\n      recommendedKeywords: [],\n      recommendedCourses: [],\n      recommendedRatings: []    };\n  }\n\n    //Function to add a set of elements (e) to\n   //the cart array; set could just be one element\n   addFavorite(e) {\n    let a = this.state.favorites.slice(); //creates the clone of the state\n\n      let index = a.length;\n      a[index] = e;\n\n      this.setState({favorites: a});\n    console.log(\"added favorite\");\n  }\n\n  //Function to remove a set of elements (e) from\n  //the cart array; set could just be one element\n  removeFavorite(e) {\n    \n      var a= [...this.state.favorites]; // make a separate copy of the array\n\n      for( var i = 0; i < a.length; i++){ if ( a[i] === e) { a.splice(i, 1); i--; }}//=> [1, 2, 3, 4, 6, 7, 8, 9, 0]\n\n      //Adjust state array to copy\n      this.setState({favorites: a});\n  }\n\n  changeSearchMode(mode, course, section){\n    this.setState({searchMode: mode, currentCourse: course, currentSection: section});\n  }\n    //Need to remove course and add new rating if viable\n    addRating(course, rating){\n      // console.log(course)\n      // console.log(rating)\n\n      let a = this.state.recommendedCourses.slice(); //creates the clone of the state\n      let b = this.state.recommendedRatings.slice(); //creates the clone of the state\n      let index = a.indexOf(course);\n\n      //Add course to array\n      if(index === -1 && rating > 3){\n          let index = a.length;\n          a[index] = course;\n          b[index] = rating;\n        }\n\n        //Need to remove element from array\n      else if(index!== -1 && (rating <=3 || rating === \"Rate Course\")){\n        //Special case to completely empty out array\n        if(a.length===1){\n          a.splice(0, 1)\n          b.splice(0,1)\n        }\n        else{\n          a.splice(index, 1);\n          b.splice(index, 1);\n        }\n      }\n      //Update possitive rating within recommended courses\n        else{\n          a[index] = course;\n          b[index] = rating;\n        }\n\n      this.setState(({recommendedCourses: a, recommendedRatings: b}), ()=> this.updateRecommendedKeywords());\n    return;\n    \n    }\n  \n   //Function to add a set of elements (e) to\n   //the cart array; set could just be one element\n   addToCart(e) {\n    let a = this.state.cart.slice(); //creates the clone of the state\n\n    for(var i = 0; i<e.length; i++){\n      let index = a.length;\n      \n      a[index] = e[i];\n    }\n    this.setState({cart: a});\n\n  }\n\n  //Function to remove a set of elements (e) from\n  //the cart array; set could just be one element\n  removeFromCart(e) {\n    \n      var a= [...this.state.cart]; // make a separate copy of the array\n      a = a.filter(x => !e.includes(x));\n\n\n      //Adjust state array to copy\n      this.setState({cart: a});\n  }\n\n  //Function to toggle cartMode\ntoggleCart = (eventKey) => {\n  //Go back to course view when mode is toggled, if in section or subsection view\n  this.changeSearchMode(\"course\", null, null);\n  \n  if(eventKey === \"cart\"){\n      this.setState(\n      {cartMode: true}\n    );\n\n  }\n  else{\n    this.setState(\n      {cartMode: false}\n    );\n\n  }\n}\n  componentDidMount() {\n    this.setState({completedCourses: completed, allCourses: data, filteredCourses: data, subjects: this.getSubjects(data), keywords: this.setInterestAreas(data)});\n\n    // fetch('http://mysqlcs639.cs.wisc.edu:53706/api/react/classes').then(\n    //   res => res.json()\n    // ).then(data => this.setState({allCourses: data, filteredCourses: data, subjects: this.getSubjects(data), keywords: this.setInterestAreas(data)}))\n    \n    // fetch('http://mysqlcs639.cs.wisc.edu:53706/api/react/students/5022025924/classes/completed').then(\n    //   res => res.json()\n    // ).then(data => this.setState({completedCourses: data})) ;\n    \n  }\n\n  getSubjects(data) {\n    let subjects = [];\n    subjects.push(\"All\");\n\n    for(const course of Object.values(data)) {\n      if(subjects.indexOf(course.subject) === -1)\n        subjects.push(course.subject);\n    }\n\n    return subjects;\n  }\n  setInterestAreas(data){\n    let keywords = [];\n    keywords.push(\"All\");\n\n    for(const course of Object.values(data)) {\n\n        var keyList = course.keywords.toString().split(/[,]+/);\n            for(var i = 0; i<keyList.length; i++){\n  \n              if(keywords.indexOf(keyList[i]) === -1){\n                keywords.push(keyList[i]);\n              }\n            }\n            // index++;\n      }\n      this.setState({keywords: keywords});\n\n      return keywords\n    }\n    updateRecommendedKeywords(){\n      let recommendedKeywords = [];\n      var index = 0;\n      \n      for(const course of Object.values(this.state.recommendedCourses)) {\n          if(this.state.recommendedRatings[index]>3){\n          var keyList = course.keywords.toString().split(/[,]+/);\n              for(var i = 0; i<keyList.length; i++){\n    \n                if(recommendedKeywords.indexOf(keyList[i]) === -1){\n                  recommendedKeywords.push(keyList[i]);\n                }\n              }\n              index++;\n            }\n        }\n        this.setState({recommendedKeywords: recommendedKeywords});\n        return recommendedKeywords\n      }\n\n  setCourses(courses) {\n    this.setState({filteredCourses: courses})\n  }\n  render() {\n    return (//'background-image':'url(\"classroom.png\")'\n      <>\n        <link\n          rel=\"stylesheet\"\n          href=\"https://maxcdn.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css\"\n          integrity=\"sha384-ggOyR0iXCbMQv3Xipma34MD+dH/1fQ784/j6cY/iJTQUOhcWr7x9JvoRxT2MZw1T\"\n          crossOrigin=\"anonymous\"\n        />\n        <Sidebar style = {{ 'font-family': 'Merriweather'}} setCourses={(courses) => this.setCourses(courses)} courses={this.state.allCourses} subjects={this.state.subjects} keywords = {this.state.keywords} favorites = {this.state.favorites}/>\n\n        <Tabs className = \"myClass\" defaultActiveKey=\"search\" onSelect={(k) => this.toggleCart(k)}  style={{'minHeight': '3.5vh',  position: 'fixed', zIndex: 1,  width: '100%', backgroundColor: \"#f3f9ff\"}}>\n        <Tab title=\"UW Courses\" disabled ></Tab>\n        <Tab className = \"clouds\" eventKey=\"search\" title=\"Search\" style={{paddingTop: '5vh', 'minHeight': '100vh'}}>\n            <div style={{marginLeft: '20vw'}}>\n              <CourseArea data={this.state.filteredCourses} completedCourses = {this.state.completedCourses} changeSearchMode = {(String, Course, Subsection) => this.changeSearchMode(String, Course, Subsection)} searchMode = {this.state.searchMode} currentCourse = {this.state.currentCourse} currentSection = {this.state.currentSection} cart = {this.state.cart} removeFromCart={(Course) => this.removeFromCart(Course)} addToCart={(Course) => this.addToCart(Course)} allData={this.state.allCourses} cartMode={this.state.cartMode}/>\n          </div>\n          </Tab>\n\n          <Tab className = \"classroom\" eventKey=\"cart\" title=\"Cart\" style={{paddingTop: '5vh',  'minHeight': '100vh' }} >\n          <div style={{marginLeft: '20vw'}}>\n          <CourseArea data={this.state.filteredCourses} completedCourses = {this.state.completedCourses} changeSearchMode = {(String, Course, Subsection) => this.changeSearchMode(String, Course, Subsection)} searchMode = {this.state.searchMode} currentCourse = {this.state.currentCourse} currentSection = {this.state.currentSection} cart = {this.state.cart} removeFromCart={(Course) => this.removeFromCart(Course)} addToCart={(Course) => this.addToCart(Course)} allData={this.state.allCourses} cartMode={this.state.cartMode}/>\n\n          </div>\n          </Tab>\n          <Tab className = \"completed\" eventKey=\"completed\" title=\"Completed Courses\" style={{paddingTop: '5vh', 'minHeight': '100vh'}}>\n\n              <div style={{marginLeft: '20vw'}}>\n              <CompletedCourseArea data={this.state.filteredCourses} allData={this.state.allCourses} addRating = {(coursenumber, rating) => this.addRating(coursenumber, rating)} completedCourses = {this.state.completedCourses}/>\n\n          </div>\n          </Tab>\n\n          <Tab  className = \"recommended\" eventKey=\"recommended\" title=\"Recommended Courses\" style={{paddingTop: '5vh', 'minHeight': '100vh' }}>\n\n              <div style={{marginLeft: '20vw'}}>\n              <RecommendedCourseArea addFavorite = {(Course) => this.addFavorite(Course)} removeFavorite = {(Course) => this.removeFavorite(Course)} recommendedCourses = {this.state.recommendedCourses} recommendedKeywords={this.state.recommendedKeywords} data={this.state.filteredCourses} allData={this.state.allCourses} completedCourses = {this.state.completedCourses} cart = {this.state.cart} removeFromCart={(Course) => this.removeFromCart(Course)} addToCart={(Course) => this.addToCart(Course)} allData={this.state.allCourses} cartMode={this.state.cartMode}/>\n              \n          </div>\n          </Tab>\n         \n        </Tabs> \n        <Card.Footer style = {{fontSize: '1vw', justifyContent:'center'}}>Click <a style = {{fontSize: '1vw'}} href = \"https://github.com/tituscsmith/course_scheduler\">here</a> to see information about the app, including JSON format for the data.</Card.Footer>\n      </>\n    )\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport './App.css';\n\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}